"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkearthquest"] = self["webpackChunkearthquest"] || []).push([["main"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/canvas.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/canvas.css ***!
  \******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".canvas {\\n    background-color: lightgray;\\n    border: solid #ff0000;\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://earthquest/./src/css/canvas.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://earthquest/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://earthquest/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/assets/font.png":
/*!*****************************!*\
  !*** ./src/assets/font.png ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"e5c4511cc414342cf3f7d351c0f0210e.png\");\n\n//# sourceURL=webpack://earthquest/./src/assets/font.png?");

/***/ }),

/***/ "./src/css/canvas.css":
/*!****************************!*\
  !*** ./src/css/canvas.css ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./canvas.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/canvas.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://earthquest/./src/css/canvas.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/core/CanvasController.ts":
/*!**************************************!*\
  !*** ./src/core/CanvasController.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CanvasController = void 0;\n/**\n * This controller manages the canvas\n */\nclass CanvasController {\n    constructor() {\n        /** @type {HTMLCanvasElement} Canvas element */\n        this.canvas = document.createElement('canvas');\n        this.canvas.setAttribute('width', '800px');\n        this.canvas.setAttribute('height', '500px');\n        this.canvas.classList.add('canvas');\n        /** @type {WebGL2RenderingContext} render context from this canvas*/\n        // @ts-ignore\n        this.gl = WebGLDebugUtils.makeDebugContext(this.canvas.getContext('webgl2'), this.logGlError.bind(this), this.logGLCall.bind(this));\n        // Only continue if WebGL is available and working\n        if (this.gl === null) {\n            console.error('Unable to initialize WebGL2. Your browser or machine may not support it.');\n            return;\n        }\n    }\n    logGlError(error, functionName, args) {\n        console.error('GL error: ' +\n            error +\n            ' in gl.' +\n            functionName +\n            '(' +\n            // @ts-ignore\n            WebGLDebugUtils.glFunctionArgsToString(functionName, args) +\n            ')');\n    }\n    logGLCall(functionName, args) {\n        /*\n        console.log(\n          'gl.' +\n            functionName +\n            '(' +\n            // @ts-ignore\n            (WebGLDebugUtils as any).glFunctionArgsToString(functionName, args) +\n            ')'\n        );\n        */\n    }\n    /**\n     * Get the canvas component\n     * @returns\n     */\n    component() {\n        return this.canvas;\n    }\n}\nexports.CanvasController = CanvasController;\n\n\n//# sourceURL=webpack://earthquest/./src/core/CanvasController.ts?");

/***/ }),

/***/ "./src/core/FpsController.ts":
/*!***********************************!*\
  !*** ./src/core/FpsController.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FpsController = void 0;\n/**\n * Shows the FPS\n */\nclass FpsController {\n    constructor() {\n        /** The frames per second (float) */\n        this.fps = 0;\n        /** Just a counter for displaying FPS to the console */\n        this.delayCounter = 0;\n        /** Show the FPS every second */\n        this.displayInterval = 1000;\n    }\n    /**\n     * Calculate the FPS\n     * @param {float} dt delta time in ms\n     */\n    update(dt) {\n        this.fps = 1000.0 / dt;\n        this.delayCounter += dt;\n        if (this.delayCounter >= this.displayInterval) {\n            console.debug('ms ' + dt.toFixed(2) + ' FPS: ' + this.fps.toFixed(2));\n            this.delayCounter = 0;\n        }\n    }\n}\nexports.FpsController = FpsController;\n\n\n//# sourceURL=webpack://earthquest/./src/core/FpsController.ts?");

/***/ }),

/***/ "./src/core/GlBuffer.ts":
/*!******************************!*\
  !*** ./src/core/GlBuffer.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GlBuffer = void 0;\n/**\n * Creates a buffer of a quad.\n */\nclass GlBuffer {\n    /**\n     * Constructor\n     * @param {WebGL2RenderingContext} gl\n     */\n    constructor(gl) {\n        this.gl = gl;\n        /** @type {WebGLBuffer} position buffer */\n        this.buffer = 0;\n        /** @type {WebGLBuffer} texture buffer */\n        this.bufferTex = 0;\n        /** @type {WebGLBuffer} index buffer */\n        this.indexBuffer = 0;\n        /** @type {number} How many indices do we have */\n        this.indexCount = 0;\n    }\n    /**\n     * Create the buffer\n     * @param {QuadModel[]} quads A array of quads that will be added to this buffer\n     * @param {boolean} isStatic Is this buffer static\n     * @returns\n     */\n    initBuffers(quads, isStatic) {\n        // Now create an array of positions for the square.\n        const positions = [];\n        const texture = [];\n        const index = [];\n        // reset counters\n        this.indexCount = 0;\n        //const positions = [\n        // -0.1,  0.1, 0.0,\n        // -0.1, -0.1, 0.0,\n        //  0.1,  0.1, 0.0,\n        //  0.1, -0.1, 0.0,\n        //];\n        //               Building a quad\n        //\n        //    Pos[-1, 1]                Texture [0,1]\n        //   p0---------p1 (max)      p0 (min)----p1\n        //   |        / |              |        / |\n        //   |      /   |              |      /   |\n        //   |    /     |              |    /     |\n        //   |  /       |              |  /       |\n        //   p3---------p2             p3---------p2 (max)\n        //  (min)\n        //\n        quads.forEach((quad) => {\n            positions.push(quad.min.x, quad.min.y, quad.depth);\n            positions.push(quad.max.x, quad.min.y, quad.depth);\n            positions.push(quad.max.x, quad.max.y, quad.depth);\n            positions.push(quad.min.x, quad.max.y, quad.depth);\n            texture.push(quad.minTex.x, quad.minTex.y);\n            texture.push(quad.maxTex.x, quad.minTex.y);\n            texture.push(quad.maxTex.x, quad.maxTex.y);\n            texture.push(quad.minTex.x, quad.maxTex.y);\n            index.push(this.indexCount + 0);\n            index.push(this.indexCount + 1);\n            index.push(this.indexCount + 3);\n            index.push(this.indexCount + 1);\n            index.push(this.indexCount + 2);\n            index.push(this.indexCount + 3);\n            this.indexCount += 6;\n        });\n        console.debug('pos ', positions);\n        console.debug('tex ', texture);\n        // Create a buffer for positions.\n        this.buffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(positions), isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW);\n        // texture buffer\n        this.bufferTex = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.bufferTex);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(texture), isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW);\n        // index buffer\n        this.indexBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(index), isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW);\n    }\n    /**\n     * Enable vertex attributes and element buffer\n     * @param {number} positionAttribute\n     * @param {number} textureAttribute\n     */\n    enable(positionAttribute, textureAttribute) {\n        // Tell WebGL how to pull out the positions from the position\n        // buffer into the vertexPosition attribute\n        {\n            const numComponents = 3;\n            const type = this.gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\n            this.gl.vertexAttribPointer(positionAttribute, numComponents, type, normalize, stride, offset);\n            this.gl.enableVertexAttribArray(positionAttribute);\n        }\n        // Tell WebGL how to pull out the texture coordinates from\n        // the texture coordinate buffer into the textureCoord attribute.\n        {\n            const numComponents = 2;\n            const type = this.gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.bufferTex);\n            this.gl.vertexAttribPointer(textureAttribute, numComponents, type, normalize, stride, offset);\n            this.gl.enableVertexAttribArray(textureAttribute);\n        }\n        // Tell WebGL which indices to use to index the vertices\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    }\n    /**\n     * Clean up buffer\n     */\n    dispose() {\n        if (this.buffer) {\n            this.gl.deleteBuffer(this.buffer);\n            this.buffer = 0;\n        }\n        if (this.bufferTex) {\n            this.gl.deleteBuffer(this.bufferTex);\n            this.bufferTex = 0;\n        }\n        if (this.indexBuffer) {\n            this.gl.deleteBuffer(this.indexBuffer);\n            this.indexBuffer = 0;\n        }\n    }\n    draw() { }\n}\nexports.GlBuffer = GlBuffer;\n\n\n//# sourceURL=webpack://earthquest/./src/core/GlBuffer.ts?");

/***/ }),

/***/ "./src/core/Scene.ts":
/*!***************************!*\
  !*** ./src/core/Scene.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Scene = void 0;\nconst GlBuffer_1 = __webpack_require__(/*! ./GlBuffer */ \"./src/core/GlBuffer.ts\");\nconst ShaderController_1 = __webpack_require__(/*! ./ShaderController */ \"./src/core/ShaderController.ts\");\nconst TextManager_1 = __webpack_require__(/*! ./TextManager */ \"./src/core/TextManager.ts\");\nconst FpsController_1 = __webpack_require__(/*! ./FpsController */ \"./src/core/FpsController.ts\");\nconst Texture_1 = __webpack_require__(/*! ./Texture */ \"./src/core/Texture.ts\");\nconst font_png_1 = __importDefault(__webpack_require__(/*! ../assets/font.png */ \"./src/assets/font.png\"));\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\nconst vec4_1 = __importDefault(__webpack_require__(/*! ../math/vec4 */ \"./src/math/vec4.ts\"));\nconst vsSource = `\n    attribute vec4 aPos;\n    attribute vec2 aTex;\n\n    varying highp vec2 vTex;\n\n    void main() {\n        vTex = aTex;\n        gl_Position = aPos;\n    }\n`;\n// Fragment shader program\nconst fsSource = `\n    varying highp vec2 vTex;\n    uniform sampler2D uSampler;\n\n    void main() {\n        gl_FragColor = texture2D(uSampler, vTex);\n    }\n`;\n/**\n * Sample scene\n */\nclass Scene {\n    /**\n     * Constructor\n     * @param {WebGL2RenderingContext} gl The render context\n     */\n    constructor(gl) {\n        this.gl = gl;\n        this.textManager = new TextManager_1.TextManager(this.gl);\n        this.textManager.addText({\n            text: 'hello',\n            position: new vec2_1.default([0, 0]),\n            color: new vec4_1.default([1, 1, 1, 1]),\n        });\n        this.texture = new Texture_1.Texture(this.gl);\n        this.fps = new FpsController_1.FpsController();\n        /** Shader info for this shader */\n        this.shaderInfo = {\n            attr: { aPos: 0, aTex: 0 },\n            uniform: { uSampler: 0 },\n        };\n    }\n    /**\n     * Sets up the scene\n     */\n    init() {\n        console.log('init scene');\n        // Create font manager\n        //this.textManager.initialize();\n        this.texture.initialize(font_png_1.default);\n        // Browsers copy pixels from the loaded image in top-to-bottom order —\n        // from the top-left corner; but WebGL wants the pixels in bottom-to-top\n        // order — starting from the bottom-left corner. So in order to prevent\n        // the resulting image texture from having the wrong orientation when\n        // rendered, we need to make the following call, to cause the pixels to\n        // be flipped into the bottom-to-top order that WebGL expects.\n        // See jameshfisher.com/2020/10/22/why-is-my-webgl-texture-upside-down\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n        // Create a new buffer\n        this.buffer = new GlBuffer_1.GlBuffer(this.gl);\n        const quads = [\n            {\n                max: new vec2_1.default([0.5, 0.5]),\n                min: new vec2_1.default([-0.5, -0.5]),\n                depth: 0,\n                minTex: new vec2_1.default([0, 0]),\n                maxTex: new vec2_1.default([1, 1]),\n                color: new vec4_1.default([1, 0, 0, 1]),\n            },\n        ];\n        this.buffer.initBuffers(quads, true);\n        // create the shader from the vertex and fragment source\n        this.shader = new ShaderController_1.ShaderController(this.gl, 'simple');\n        this.shader.initShaderProgram(vsSource, fsSource);\n        // set the info\n        this.shaderInfo.attr.aPos = this.shader.getAttribute('aPos');\n        this.shaderInfo.attr.aTex = this.shader.getAttribute('aTex');\n        this.shaderInfo.uniform.uSampler = this.shader.getUniform('uSampler');\n    }\n    /**\n     * Called for each frame.\n     * @param {float} dt delta time from the last frame\n     */\n    update(dt) {\n        this.fps.update(dt);\n        this.gl.clearColor(0.0, 0.0, 0.0, 1.0); // Clear to black, fully opaque\n        this.gl.clearDepth(1.0); // Clear everything\n        this.gl.enable(this.gl.DEPTH_TEST); // Enable depth testing\n        this.gl.depthFunc(this.gl.LEQUAL); // Near things obscure far things\n        // Clear the canvas before we start drawing on it.\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n        // update the texture manager\n        this.textManager.update(dt);\n        // enable the buffer\n        this.buffer.enable(this.shaderInfo.attr.aPos, this.shaderInfo.attr.aTex);\n        // enable the shader\n        this.shader.enable();\n        // Tell WebGL we want to affect texture unit 0\n        this.gl.activeTexture(this.gl.TEXTURE0);\n        // Bind the texture to texture unit 0\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture.texture);\n        // Tell the shader we bound the texture to texture unit 0\n        this.gl.uniform1i(this.shaderInfo.uniform.uSampler, 0);\n        {\n            const vertexCount = this.buffer.indexCount;\n            const type = this.gl.UNSIGNED_SHORT;\n            const offset = 0;\n            this.gl.drawElements(this.gl.TRIANGLES, vertexCount, type, offset);\n        }\n    }\n    dispose() {\n        console.log('dispose');\n    }\n}\nexports.Scene = Scene;\n\n\n//# sourceURL=webpack://earthquest/./src/core/Scene.ts?");

/***/ }),

/***/ "./src/core/ShaderController.ts":
/*!**************************************!*\
  !*** ./src/core/ShaderController.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShaderController = void 0;\n/**\n * Manages one shader program\n */\nclass ShaderController {\n    /**\n     * Creates the shader controller\n     * @param {WebGL2RenderingContext} gl GL Context\n     * @param {string} shaderName The name of the shader. This is just a way to id different shader for debugging\n     */\n    constructor(gl, shaderName) {\n        this.gl = gl;\n        this.shaderName = shaderName;\n    }\n    /**\n     * Initialize a shader program, so WebGL knows how to draw our data\n     * @param {*} vsSource\n     * @param {*} fsSource\n     * @returns\n     */\n    initShaderProgram(vsSource, fsSource) {\n        const vertexShader = this._loadShader(this.gl.VERTEX_SHADER, vsSource);\n        const fragmentShader = this._loadShader(this.gl.FRAGMENT_SHADER, fsSource);\n        // Create the shader program\n        this.shaderProgram = this.gl.createProgram();\n        this.gl.attachShader(this.shaderProgram, vertexShader);\n        this.gl.attachShader(this.shaderProgram, fragmentShader);\n        this.gl.linkProgram(this.shaderProgram);\n        // needed for get program parameter\n        this.gl.useProgram(this.shaderProgram);\n        // If creating the shader program failed, alert\n        if (!this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS)) {\n            console.error(`Unable to initialize the shader program: ${this.gl.getProgramInfoLog(this.shaderProgram)}`);\n        }\n    }\n    /**\n     * Get a shader attribute location\n     * @param {string} name Name of the attribute\n     * @return {number} The attribute location\n     */\n    getAttribute(name) {\n        const loc = this.gl.getAttribLocation(this.shaderProgram, name);\n        if (loc == -1) {\n            console.error('can not find attribute: ' + name + ' in shader ' + this.shaderName);\n        }\n        return loc;\n    }\n    /**\n     * Get a shader attribute location\n     * @param {string} name Name of the attribute\n     * @return {number} The attribute location\n     */\n    getUniform(name) {\n        const loc = this.gl.getUniformLocation(this.shaderProgram, name);\n        if (loc == -1) {\n            console.error('can not find uniform: ' + name + ' in shader ' + this.shaderName);\n        }\n        return loc;\n    }\n    /**\n     * Enable the shader\n     */\n    enable() {\n        // Tell WebGL to use our program when drawing\n        this.gl.useProgram(this.shaderProgram);\n    }\n    /**\n     * creates a shader of the given type, uploads the source and\n     * compiles it.\n     * @param {*} gl\n     * @param {*} type\n     * @param {*} source\n     * @returns\n     */\n    _loadShader(type, source) {\n        const shader = this.gl.createShader(type);\n        // Send the source to the shader object\n        this.gl.shaderSource(shader, source);\n        // Compile the shader program\n        this.gl.compileShader(shader);\n        // See if it compiled successfully\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error(`An error occurred compiling the shaders: ${this.gl.getShaderInfoLog(shader)}`);\n            this.gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    }\n}\nexports.ShaderController = ShaderController;\n\n\n//# sourceURL=webpack://earthquest/./src/core/ShaderController.ts?");

/***/ }),

/***/ "./src/core/TextController.ts":
/*!************************************!*\
  !*** ./src/core/TextController.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextController = void 0;\nclass TextController {\n    constructor(gl, fontData) {\n        this.gl = gl;\n        this.fontData = fontData;\n    }\n    /**\n     *\n     * @param {string} text\n     * @param {int} x\n     * @param {int} y\n     * @param {float} depth Range -1 to 1. -1 is back, 1 is in front\n     * @param {float} scale Range .0001 to 1\n     * @param {float[4]} color RGBA color\n     * @param {int} maxHeight\n     * @param {int} width\n     * @param {int} height\n     */\n    initialize(text, x, y, depth, scale, color, maxHeight, width, height) { }\n    /**\n     * Updates the text animations.\n     * @param {float} dt Delta time in ms\n     */\n    update(dt) { }\n}\nexports.TextController = TextController;\n\n\n//# sourceURL=webpack://earthquest/./src/core/TextController.ts?");

/***/ }),

/***/ "./src/core/TextManager.ts":
/*!*********************************!*\
  !*** ./src/core/TextManager.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextManager = void 0;\nconst TextController_1 = __webpack_require__(/*! ./TextController */ \"./src/core/TextController.ts\");\n/**\n * Vertex shader for Font\n */\nconst FontVS = `\n    #version 330 core\n\n    uniform mat4 u_projection;\n\n    layout (location = 0) in vec3 a_pos;\n    layout (location = 1) in vec2 a_tex;\n\n    out vec2 v_tex;\n                                                \n    void main() {\n        gl_Position = u_projection  * vec4(a_pos, 1.0);\n        v_tex = a_tex;\n    }                          \n`;\n/**\n * Fragment shader for Font\n */\nconst FontFS = `\n        #version 330 core\n                 \n        in vec2 v_tex;\n        uniform sampler2D u_font;\n        uniform vec4 u_color;\n        out vec4 color;\n                            \n        void main() {\n            color = texture(u_font, v_tex) * u_color;\n        }\n`;\n/**\n * Font manager keeps track of all FontController objects\n */\nclass TextManager {\n    constructor(gl) {\n        this.gl = gl;\n        this.texts = [];\n    }\n    /**\n     * Initialize the font manage. Only one font can be used per manager\n     * The font data is a json structure.\n     * @param {} fontImage\n     * @param {FontData} fontData\n     */\n    initialize(fontImage, fontData) {\n        this.fontImage = fontImage;\n        this.fontData = fontData;\n        this.texts = [];\n    }\n    /**\n     * Updates all the TextureController\n     * @param {number} dt Delta time in ms\n     */\n    update(dt) {\n        this.texts.forEach((text) => {\n            text.update(dt);\n        });\n    }\n    addText(textModel) {\n        const text = new TextController_1.TextController(this.gl, this.fontData);\n        //text.initialize(textModel.text, textModel.position[0])\n        //this.texts.push(new )\n        console.warn('Implement fontManager');\n    }\n    /**\n     * clean up everything\n     */\n    dispose() { }\n}\nexports.TextManager = TextManager;\n\n\n//# sourceURL=webpack://earthquest/./src/core/TextManager.ts?");

/***/ }),

/***/ "./src/core/Texture.ts":
/*!*****************************!*\
  !*** ./src/core/Texture.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Texture = void 0;\n/**\n * OpenGL texture\n */\nclass Texture {\n    constructor(gl) {\n        this.gl = gl;\n        this.texture = 0;\n    }\n    initialize(imagePath) {\n        this.texturePath = imagePath;\n        this.texture = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n        // Because images have to be download over the internet\n        // they might take a moment until they are ready.\n        // Until then put a single pixel in the texture so we can\n        // use it immediately. When the image has finished downloading\n        // we'll update the texture with the contents of the image.\n        const level = 0;\n        const internalFormat = this.gl.RGBA;\n        const width = 1;\n        const height = 1;\n        const border = 0;\n        const srcFormat = this.gl.RGBA;\n        const srcType = this.gl.UNSIGNED_BYTE;\n        const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\n        this.gl.texImage2D(this.gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n        const image = new Image();\n        image.onload = () => {\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n            this.gl.texImage2D(this.gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n            // WebGL1 has different requirements for power of 2 images\n            // vs non power of 2 images so check if the image is a\n            // power of 2 in both dimensions.\n            if (this.isPowerOf2(image.width) && this.isPowerOf2(image.height)) {\n                // Yes, it's a power of 2. Generate mips.\n                this.gl.generateMipmap(this.gl.TEXTURE_2D);\n            }\n            else {\n                // No, it's not a power of 2. Turn of mips and set\n                // wrapping to clamp to edge\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n            }\n        };\n        image.src = imagePath;\n    }\n    isPowerOf2(value) {\n        return (value & (value - 1)) == 0;\n    }\n}\nexports.Texture = Texture;\n\n\n//# sourceURL=webpack://earthquest/./src/core/Texture.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst CanvasController_1 = __webpack_require__(/*! ./core/CanvasController */ \"./src/core/CanvasController.ts\");\nconst Scene_1 = __webpack_require__(/*! ./core/Scene */ \"./src/core/Scene.ts\");\n__webpack_require__(/*! ./css/canvas.css */ \"./src/css/canvas.css\");\n/**\n * Create the only instance of a canvas controller\n */\nconst canvas = new CanvasController_1.CanvasController();\nconst scene = new Scene_1.Scene(canvas.gl);\nscene.init();\n/** time tracking variables */\nlet previousTimeStamp;\nfunction step(timestamp) {\n    // save the start time\n    if (previousTimeStamp === undefined) {\n        previousTimeStamp = timestamp;\n    }\n    // calculate the elapsed\n    const elapsed = timestamp - previousTimeStamp;\n    // update the scene\n    scene.update(elapsed);\n    // request a new frame\n    previousTimeStamp = timestamp;\n    window.requestAnimationFrame(step);\n}\n// request a frame\nwindow.requestAnimationFrame(step);\n// add the canvas to the body\ndocument.body.appendChild(canvas.component());\n\n\n//# sourceURL=webpack://earthquest/./src/index.ts?");

/***/ }),

/***/ "./src/math/constants.ts":
/*!*******************************!*\
  !*** ./src/math/constants.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.equals = exports.toRadian = exports.degree = exports.round = exports.RANDOM = exports.epsilon = void 0;\nexports.epsilon = 0.00001;\n//\n// Custom math functions\n//\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexports.RANDOM = Math.random;\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nfunction round(a) {\n    if (a >= 0)\n        return Math.round(a);\n    return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\nexports.round = round;\nexports.degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nfunction toRadian(a) {\n    return a * exports.degree;\n}\nexports.toRadian = toRadian;\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nfunction equals(a, b) {\n    return Math.abs(a - b) <= exports.epsilon * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nexports.equals = equals;\n\n\n//# sourceURL=webpack://earthquest/./src/math/constants.ts?");

/***/ }),

/***/ "./src/math/mat3.ts":
/*!**************************!*\
  !*** ./src/math/mat3.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst mat4_1 = __importDefault(__webpack_require__(/*! ./mat4 */ \"./src/math/mat4.ts\"));\nconst quat_1 = __importDefault(__webpack_require__(/*! ./quat */ \"./src/math/quat.ts\"));\nconst vec2_1 = __importDefault(__webpack_require__(/*! ./vec2 */ \"./src/math/vec2.ts\"));\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\nclass mat3 {\n    constructor(values) {\n        this.values = new Float32Array(9);\n        if (values !== undefined) {\n            this.init(values);\n        }\n    }\n    at(index) {\n        return this.values[index];\n    }\n    init(values) {\n        for (let i = 0; i < 9; i++) {\n            this.values[i] = values[i];\n        }\n        return this;\n    }\n    reset() {\n        for (let i = 0; i < 9; i++) {\n            this.values[i] = 0;\n        }\n    }\n    copy(dest) {\n        if (!dest) {\n            dest = new mat3();\n        }\n        for (let i = 0; i < 9; i++) {\n            dest.values[i] = this.values[i];\n        }\n        return dest;\n    }\n    all() {\n        const data = [];\n        for (let i = 0; i < 9; i++) {\n            data[i] = this.values[i];\n        }\n        return data;\n    }\n    row(index) {\n        return [\n            this.values[index * 3 + 0],\n            this.values[index * 3 + 1],\n            this.values[index * 3 + 2],\n        ];\n    }\n    col(index) {\n        return [\n            this.values[index],\n            this.values[index + 3],\n            this.values[index + 6],\n        ];\n    }\n    equals(matrix, threshold = constants_1.epsilon) {\n        for (let i = 0; i < 9; i++) {\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\n                return false;\n            }\n        }\n        return true;\n    }\n    determinant() {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a10 = this.values[3];\n        const a11 = this.values[4];\n        const a12 = this.values[5];\n        const a20 = this.values[6];\n        const a21 = this.values[7];\n        const a22 = this.values[8];\n        const det01 = a22 * a11 - a12 * a21;\n        const det11 = -a22 * a10 + a12 * a20;\n        const det21 = a21 * a10 - a11 * a20;\n        return a00 * det01 + a01 * det11 + a02 * det21;\n    }\n    setIdentity() {\n        this.values[0] = 1;\n        this.values[1] = 0;\n        this.values[2] = 0;\n        this.values[3] = 0;\n        this.values[4] = 1;\n        this.values[5] = 0;\n        this.values[6] = 0;\n        this.values[7] = 0;\n        this.values[8] = 1;\n        return this;\n    }\n    transpose() {\n        const temp01 = this.values[1];\n        const temp02 = this.values[2];\n        const temp12 = this.values[5];\n        this.values[1] = this.values[3];\n        this.values[2] = this.values[6];\n        this.values[3] = temp01;\n        this.values[5] = this.values[7];\n        this.values[6] = temp02;\n        this.values[7] = temp12;\n        return this;\n    }\n    inverse() {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a10 = this.values[3];\n        const a11 = this.values[4];\n        const a12 = this.values[5];\n        const a20 = this.values[6];\n        const a21 = this.values[7];\n        const a22 = this.values[8];\n        const det01 = a22 * a11 - a12 * a21;\n        const det11 = -a22 * a10 + a12 * a20;\n        const det21 = a21 * a10 - a11 * a20;\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        this.values[0] = det01 * det;\n        this.values[1] = (-a22 * a01 + a02 * a21) * det;\n        this.values[2] = (a12 * a01 - a02 * a11) * det;\n        this.values[3] = det11 * det;\n        this.values[4] = (a22 * a00 - a02 * a20) * det;\n        this.values[5] = (-a12 * a00 + a02 * a10) * det;\n        this.values[6] = det21 * det;\n        this.values[7] = (-a21 * a00 + a01 * a20) * det;\n        this.values[8] = (a11 * a00 - a01 * a10) * det;\n        return this;\n    }\n    multiply(matrix) {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a10 = this.values[3];\n        const a11 = this.values[4];\n        const a12 = this.values[5];\n        const a20 = this.values[6];\n        const a21 = this.values[7];\n        const a22 = this.values[8];\n        const b00 = matrix.at(0);\n        const b01 = matrix.at(1);\n        const b02 = matrix.at(2);\n        const b10 = matrix.at(3);\n        const b11 = matrix.at(4);\n        const b12 = matrix.at(5);\n        const b20 = matrix.at(6);\n        const b21 = matrix.at(7);\n        const b22 = matrix.at(8);\n        this.values[0] = b00 * a00 + b01 * a10 + b02 * a20;\n        this.values[1] = b00 * a01 + b01 * a11 + b02 * a21;\n        this.values[2] = b00 * a02 + b01 * a12 + b02 * a22;\n        this.values[3] = b10 * a00 + b11 * a10 + b12 * a20;\n        this.values[4] = b10 * a01 + b11 * a11 + b12 * a21;\n        this.values[5] = b10 * a02 + b11 * a12 + b12 * a22;\n        this.values[6] = b20 * a00 + b21 * a10 + b22 * a20;\n        this.values[7] = b20 * a01 + b21 * a11 + b22 * a21;\n        this.values[8] = b20 * a02 + b21 * a12 + b22 * a22;\n        return this;\n    }\n    multiplyVec2(vector, result) {\n        const x = vector.x;\n        const y = vector.y;\n        if (result) {\n            result.xy = [\n                x * this.values[0] + y * this.values[3] + this.values[6],\n                x * this.values[1] + y * this.values[4] + this.values[7],\n            ];\n            return result;\n        }\n        else {\n            return new vec2_1.default([\n                x * this.values[0] + y * this.values[3] + this.values[6],\n                x * this.values[1] + y * this.values[4] + this.values[7],\n            ]);\n        }\n    }\n    multiplyVec3(vector, result) {\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        if (result) {\n            result.xyz = [\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\n            ];\n            return result;\n        }\n        else {\n            return new vec3_1.default([\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\n            ]);\n        }\n    }\n    toMat4(result) {\n        if (result) {\n            result.init([\n                this.values[0],\n                this.values[1],\n                this.values[2],\n                0,\n                this.values[3],\n                this.values[4],\n                this.values[5],\n                0,\n                this.values[6],\n                this.values[7],\n                this.values[8],\n                0,\n                0,\n                0,\n                0,\n                1,\n            ]);\n            return result;\n        }\n        else {\n            return new mat4_1.default([\n                this.values[0],\n                this.values[1],\n                this.values[2],\n                0,\n                this.values[3],\n                this.values[4],\n                this.values[5],\n                0,\n                this.values[6],\n                this.values[7],\n                this.values[8],\n                0,\n                0,\n                0,\n                0,\n                1,\n            ]);\n        }\n    }\n    toQuat() {\n        const m00 = this.values[0];\n        const m01 = this.values[1];\n        const m02 = this.values[2];\n        const m10 = this.values[3];\n        const m11 = this.values[4];\n        const m12 = this.values[5];\n        const m20 = this.values[6];\n        const m21 = this.values[7];\n        const m22 = this.values[8];\n        const fourXSquaredMinus1 = m00 - m11 - m22;\n        const fourYSquaredMinus1 = m11 - m00 - m22;\n        const fourZSquaredMinus1 = m22 - m00 - m11;\n        const fourWSquaredMinus1 = m00 + m11 + m22;\n        let biggestIndex = 0;\n        let fourBiggestSquaredMinus1 = fourWSquaredMinus1;\n        if (fourXSquaredMinus1 > fourBiggestSquaredMinus1) {\n            fourBiggestSquaredMinus1 = fourXSquaredMinus1;\n            biggestIndex = 1;\n        }\n        if (fourYSquaredMinus1 > fourBiggestSquaredMinus1) {\n            fourBiggestSquaredMinus1 = fourYSquaredMinus1;\n            biggestIndex = 2;\n        }\n        if (fourZSquaredMinus1 > fourBiggestSquaredMinus1) {\n            fourBiggestSquaredMinus1 = fourZSquaredMinus1;\n            biggestIndex = 3;\n        }\n        const biggestVal = Math.sqrt(fourBiggestSquaredMinus1 + 1) * 0.5;\n        const mult = 0.25 / biggestVal;\n        const result = new quat_1.default();\n        switch (biggestIndex) {\n            case 0:\n                result.w = biggestVal;\n                result.x = (m12 - m21) * mult;\n                result.y = (m20 - m02) * mult;\n                result.z = (m01 - m10) * mult;\n                break;\n            case 1:\n                result.w = (m12 - m21) * mult;\n                result.x = biggestVal;\n                result.y = (m01 + m10) * mult;\n                result.z = (m20 + m02) * mult;\n                break;\n            case 2:\n                result.w = (m20 - m02) * mult;\n                result.x = (m01 + m10) * mult;\n                result.y = biggestVal;\n                result.z = (m12 + m21) * mult;\n                break;\n            case 3:\n                result.w = (m01 - m10) * mult;\n                result.x = (m20 + m02) * mult;\n                result.y = (m12 + m21) * mult;\n                result.z = biggestVal;\n                break;\n        }\n        return result;\n    }\n    rotate(angle, axis) {\n        let x = axis.x;\n        let y = axis.y;\n        let z = axis.z;\n        let length = Math.sqrt(x * x + y * y + z * z);\n        if (!length) {\n            return null;\n        }\n        if (length !== 1) {\n            length = 1 / length;\n            x *= length;\n            y *= length;\n            z *= length;\n        }\n        const s = Math.sin(angle);\n        const c = Math.cos(angle);\n        const t = 1.0 - c;\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a10 = this.values[4];\n        const a11 = this.values[5];\n        const a12 = this.values[6];\n        const a20 = this.values[8];\n        const a21 = this.values[9];\n        const a22 = this.values[10];\n        const b00 = x * x * t + c;\n        const b01 = y * x * t + z * s;\n        const b02 = z * x * t - y * s;\n        const b10 = x * y * t - z * s;\n        const b11 = y * y * t + c;\n        const b12 = z * y * t + x * s;\n        const b20 = x * z * t + y * s;\n        const b21 = y * z * t - x * s;\n        const b22 = z * z * t + c;\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\n        this.values[3] = a00 * b10 + a10 * b11 + a20 * b12;\n        this.values[4] = a01 * b10 + a11 * b11 + a21 * b12;\n        this.values[5] = a02 * b10 + a12 * b11 + a22 * b12;\n        this.values[6] = a00 * b20 + a10 * b21 + a20 * b22;\n        this.values[7] = a01 * b20 + a11 * b21 + a21 * b22;\n        this.values[8] = a02 * b20 + a12 * b21 + a22 * b22;\n        return this;\n    }\n    static product(m1, m2, result) {\n        const a00 = m1.at(0);\n        const a01 = m1.at(1);\n        const a02 = m1.at(2);\n        const a10 = m1.at(3);\n        const a11 = m1.at(4);\n        const a12 = m1.at(5);\n        const a20 = m1.at(6);\n        const a21 = m1.at(7);\n        const a22 = m1.at(8);\n        const b00 = m2.at(0);\n        const b01 = m2.at(1);\n        const b02 = m2.at(2);\n        const b10 = m2.at(3);\n        const b11 = m2.at(4);\n        const b12 = m2.at(5);\n        const b20 = m2.at(6);\n        const b21 = m2.at(7);\n        const b22 = m2.at(8);\n        if (result) {\n            result.init([\n                b00 * a00 + b01 * a10 + b02 * a20,\n                b00 * a01 + b01 * a11 + b02 * a21,\n                b00 * a02 + b01 * a12 + b02 * a22,\n                b10 * a00 + b11 * a10 + b12 * a20,\n                b10 * a01 + b11 * a11 + b12 * a21,\n                b10 * a02 + b11 * a12 + b12 * a22,\n                b20 * a00 + b21 * a10 + b22 * a20,\n                b20 * a01 + b21 * a11 + b22 * a21,\n                b20 * a02 + b21 * a12 + b22 * a22,\n            ]);\n            return result;\n        }\n        else {\n            return new mat3([\n                b00 * a00 + b01 * a10 + b02 * a20,\n                b00 * a01 + b01 * a11 + b02 * a21,\n                b00 * a02 + b01 * a12 + b02 * a22,\n                b10 * a00 + b11 * a10 + b12 * a20,\n                b10 * a01 + b11 * a11 + b12 * a21,\n                b10 * a02 + b11 * a12 + b12 * a22,\n                b20 * a00 + b21 * a10 + b22 * a20,\n                b20 * a01 + b21 * a11 + b22 * a21,\n                b20 * a02 + b21 * a12 + b22 * a22,\n            ]);\n        }\n    }\n}\nexports[\"default\"] = mat3;\nmat3.identity = new mat3().setIdentity();\n\n\n//# sourceURL=webpack://earthquest/./src/math/mat3.ts?");

/***/ }),

/***/ "./src/math/mat4.ts":
/*!**************************!*\
  !*** ./src/math/mat4.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst mat3_1 = __importDefault(__webpack_require__(/*! ./mat3 */ \"./src/math/mat3.ts\"));\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\nconst vec4_1 = __importDefault(__webpack_require__(/*! ./vec4 */ \"./src/math/vec4.ts\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\nclass mat4 {\n    constructor(values) {\n        this.values = new Float32Array(16);\n        if (values !== undefined) {\n            this.init(values);\n        }\n    }\n    at(index) {\n        return this.values[index];\n    }\n    init(values) {\n        for (let i = 0; i < 16; i++) {\n            this.values[i] = values[i];\n        }\n        return this;\n    }\n    reset() {\n        for (let i = 0; i < 16; i++) {\n            this.values[i] = 0;\n        }\n    }\n    copy(dest) {\n        if (!dest) {\n            dest = new mat4();\n        }\n        for (let i = 0; i < 16; i++) {\n            dest.values[i] = this.values[i];\n        }\n        return dest;\n    }\n    all() {\n        const data = [];\n        for (let i = 0; i < 16; i++) {\n            data[i] = this.values[i];\n        }\n        return data;\n    }\n    row(index) {\n        return [\n            this.values[index * 4 + 0],\n            this.values[index * 4 + 1],\n            this.values[index * 4 + 2],\n            this.values[index * 4 + 3],\n        ];\n    }\n    col(index) {\n        return [\n            this.values[index],\n            this.values[index + 4],\n            this.values[index + 8],\n            this.values[index + 12],\n        ];\n    }\n    equals(matrix, threshold = constants_1.epsilon) {\n        for (let i = 0; i < 16; i++) {\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\n                return false;\n            }\n        }\n        return true;\n    }\n    determinant() {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a03 = this.values[3];\n        const a10 = this.values[4];\n        const a11 = this.values[5];\n        const a12 = this.values[6];\n        const a13 = this.values[7];\n        const a20 = this.values[8];\n        const a21 = this.values[9];\n        const a22 = this.values[10];\n        const a23 = this.values[11];\n        const a30 = this.values[12];\n        const a31 = this.values[13];\n        const a32 = this.values[14];\n        const a33 = this.values[15];\n        const det00 = a00 * a11 - a01 * a10;\n        const det01 = a00 * a12 - a02 * a10;\n        const det02 = a00 * a13 - a03 * a10;\n        const det03 = a01 * a12 - a02 * a11;\n        const det04 = a01 * a13 - a03 * a11;\n        const det05 = a02 * a13 - a03 * a12;\n        const det06 = a20 * a31 - a21 * a30;\n        const det07 = a20 * a32 - a22 * a30;\n        const det08 = a20 * a33 - a23 * a30;\n        const det09 = a21 * a32 - a22 * a31;\n        const det10 = a21 * a33 - a23 * a31;\n        const det11 = a22 * a33 - a23 * a32;\n        return (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\n    }\n    setIdentity() {\n        this.values[0] = 1;\n        this.values[1] = 0;\n        this.values[2] = 0;\n        this.values[3] = 0;\n        this.values[4] = 0;\n        this.values[5] = 1;\n        this.values[6] = 0;\n        this.values[7] = 0;\n        this.values[8] = 0;\n        this.values[9] = 0;\n        this.values[10] = 1;\n        this.values[11] = 0;\n        this.values[12] = 0;\n        this.values[13] = 0;\n        this.values[14] = 0;\n        this.values[15] = 1;\n        return this;\n    }\n    transpose() {\n        const temp01 = this.values[1];\n        const temp02 = this.values[2];\n        const temp03 = this.values[3];\n        const temp12 = this.values[6];\n        const temp13 = this.values[7];\n        const temp23 = this.values[11];\n        this.values[1] = this.values[4];\n        this.values[2] = this.values[8];\n        this.values[3] = this.values[12];\n        this.values[4] = temp01;\n        this.values[6] = this.values[9];\n        this.values[7] = this.values[13];\n        this.values[8] = temp02;\n        this.values[9] = temp12;\n        this.values[11] = this.values[14];\n        this.values[12] = temp03;\n        this.values[13] = temp13;\n        this.values[14] = temp23;\n        return this;\n    }\n    inverse() {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a03 = this.values[3];\n        const a10 = this.values[4];\n        const a11 = this.values[5];\n        const a12 = this.values[6];\n        const a13 = this.values[7];\n        const a20 = this.values[8];\n        const a21 = this.values[9];\n        const a22 = this.values[10];\n        const a23 = this.values[11];\n        const a30 = this.values[12];\n        const a31 = this.values[13];\n        const a32 = this.values[14];\n        const a33 = this.values[15];\n        const det00 = a00 * a11 - a01 * a10;\n        const det01 = a00 * a12 - a02 * a10;\n        const det02 = a00 * a13 - a03 * a10;\n        const det03 = a01 * a12 - a02 * a11;\n        const det04 = a01 * a13 - a03 * a11;\n        const det05 = a02 * a13 - a03 * a12;\n        const det06 = a20 * a31 - a21 * a30;\n        const det07 = a20 * a32 - a22 * a30;\n        const det08 = a20 * a33 - a23 * a30;\n        const det09 = a21 * a32 - a22 * a31;\n        const det10 = a21 * a33 - a23 * a31;\n        const det11 = a22 * a33 - a23 * a32;\n        let det = (det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06);\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        this.values[0] = (a11 * det11 - a12 * det10 + a13 * det09) * det;\n        this.values[1] = (-a01 * det11 + a02 * det10 - a03 * det09) * det;\n        this.values[2] = (a31 * det05 - a32 * det04 + a33 * det03) * det;\n        this.values[3] = (-a21 * det05 + a22 * det04 - a23 * det03) * det;\n        this.values[4] = (-a10 * det11 + a12 * det08 - a13 * det07) * det;\n        this.values[5] = (a00 * det11 - a02 * det08 + a03 * det07) * det;\n        this.values[6] = (-a30 * det05 + a32 * det02 - a33 * det01) * det;\n        this.values[7] = (a20 * det05 - a22 * det02 + a23 * det01) * det;\n        this.values[8] = (a10 * det10 - a11 * det08 + a13 * det06) * det;\n        this.values[9] = (-a00 * det10 + a01 * det08 - a03 * det06) * det;\n        this.values[10] = (a30 * det04 - a31 * det02 + a33 * det00) * det;\n        this.values[11] = (-a20 * det04 + a21 * det02 - a23 * det00) * det;\n        this.values[12] = (-a10 * det09 + a11 * det07 - a12 * det06) * det;\n        this.values[13] = (a00 * det09 - a01 * det07 + a02 * det06) * det;\n        this.values[14] = (-a30 * det03 + a31 * det01 - a32 * det00) * det;\n        this.values[15] = (a20 * det03 - a21 * det01 + a22 * det00) * det;\n        return this;\n    }\n    multiply(matrix) {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a03 = this.values[3];\n        const a10 = this.values[4];\n        const a11 = this.values[5];\n        const a12 = this.values[6];\n        const a13 = this.values[7];\n        const a20 = this.values[8];\n        const a21 = this.values[9];\n        const a22 = this.values[10];\n        const a23 = this.values[11];\n        const a30 = this.values[12];\n        const a31 = this.values[13];\n        const a32 = this.values[14];\n        const a33 = this.values[15];\n        let b0 = matrix.at(0);\n        let b1 = matrix.at(1);\n        let b2 = matrix.at(2);\n        let b3 = matrix.at(3);\n        this.values[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        this.values[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        this.values[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        this.values[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = matrix.at(4);\n        b1 = matrix.at(5);\n        b2 = matrix.at(6);\n        b3 = matrix.at(7);\n        this.values[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        this.values[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        this.values[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        this.values[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = matrix.at(8);\n        b1 = matrix.at(9);\n        b2 = matrix.at(10);\n        b3 = matrix.at(11);\n        this.values[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        this.values[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        this.values[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        this.values[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = matrix.at(12);\n        b1 = matrix.at(13);\n        b2 = matrix.at(14);\n        b3 = matrix.at(15);\n        this.values[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        this.values[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        this.values[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        this.values[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        return this;\n    }\n    multiplyVec3(vector) {\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        return new vec3_1.default([\n            this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12],\n            this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13],\n            this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14],\n        ]);\n    }\n    multiplyVec4(vector, dest) {\n        if (!dest) {\n            dest = new vec4_1.default();\n        }\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        const w = vector.w;\n        dest.x = this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12] * w;\n        dest.y = this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13] * w;\n        dest.z = this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14] * w;\n        dest.w = this.values[3] * x + this.values[7] * y + this.values[11] * z + this.values[15] * w;\n        return dest;\n    }\n    toMat3() {\n        return new mat3_1.default([\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[4],\n            this.values[5],\n            this.values[6],\n            this.values[8],\n            this.values[9],\n            this.values[10],\n        ]);\n    }\n    toInverseMat3() {\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a10 = this.values[4];\n        const a11 = this.values[5];\n        const a12 = this.values[6];\n        const a20 = this.values[8];\n        const a21 = this.values[9];\n        const a22 = this.values[10];\n        const det01 = a22 * a11 - a12 * a21;\n        const det11 = -a22 * a10 + a12 * a20;\n        const det21 = a21 * a10 - a11 * a20;\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        return new mat3_1.default([\n            det01 * det,\n            (-a22 * a01 + a02 * a21) * det,\n            (a12 * a01 - a02 * a11) * det,\n            det11 * det,\n            (a22 * a00 - a02 * a20) * det,\n            (-a12 * a00 + a02 * a10) * det,\n            det21 * det,\n            (-a21 * a00 + a01 * a20) * det,\n            (a11 * a00 - a01 * a10) * det,\n        ]);\n    }\n    translate(vector) {\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        this.values[12] += this.values[0] * x + this.values[4] * y + this.values[8] * z;\n        this.values[13] += this.values[1] * x + this.values[5] * y + this.values[9] * z;\n        this.values[14] += this.values[2] * x + this.values[6] * y + this.values[10] * z;\n        this.values[15] += this.values[3] * x + this.values[7] * y + this.values[11] * z;\n        return this;\n    }\n    scale(vector) {\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        this.values[0] *= x;\n        this.values[1] *= x;\n        this.values[2] *= x;\n        this.values[3] *= x;\n        this.values[4] *= y;\n        this.values[5] *= y;\n        this.values[6] *= y;\n        this.values[7] *= y;\n        this.values[8] *= z;\n        this.values[9] *= z;\n        this.values[10] *= z;\n        this.values[11] *= z;\n        return this;\n    }\n    rotate(angle, axis) {\n        let x = axis.x;\n        let y = axis.y;\n        let z = axis.z;\n        let length = Math.sqrt(x * x + y * y + z * z);\n        if (!length) {\n            return null;\n        }\n        if (length !== 1) {\n            length = 1 / length;\n            x *= length;\n            y *= length;\n            z *= length;\n        }\n        const s = Math.sin(angle);\n        const c = Math.cos(angle);\n        const t = 1.0 - c;\n        const a00 = this.values[0];\n        const a01 = this.values[1];\n        const a02 = this.values[2];\n        const a03 = this.values[3];\n        const a10 = this.values[4];\n        const a11 = this.values[5];\n        const a12 = this.values[6];\n        const a13 = this.values[7];\n        const a20 = this.values[8];\n        const a21 = this.values[9];\n        const a22 = this.values[10];\n        const a23 = this.values[11];\n        const b00 = x * x * t + c;\n        const b01 = y * x * t + z * s;\n        const b02 = z * x * t - y * s;\n        const b10 = x * y * t - z * s;\n        const b11 = y * y * t + c;\n        const b12 = z * y * t + x * s;\n        const b20 = x * z * t + y * s;\n        const b21 = y * z * t - x * s;\n        const b22 = z * z * t + c;\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\n        this.values[3] = a03 * b00 + a13 * b01 + a23 * b02;\n        this.values[4] = a00 * b10 + a10 * b11 + a20 * b12;\n        this.values[5] = a01 * b10 + a11 * b11 + a21 * b12;\n        this.values[6] = a02 * b10 + a12 * b11 + a22 * b12;\n        this.values[7] = a03 * b10 + a13 * b11 + a23 * b12;\n        this.values[8] = a00 * b20 + a10 * b21 + a20 * b22;\n        this.values[9] = a01 * b20 + a11 * b21 + a21 * b22;\n        this.values[10] = a02 * b20 + a12 * b21 + a22 * b22;\n        this.values[11] = a03 * b20 + a13 * b21 + a23 * b22;\n        return this;\n    }\n    static frustum(left, right, bottom, top, near, far) {\n        const rl = (right - left);\n        const tb = (top - bottom);\n        const fn = (far - near);\n        return new mat4([\n            (near * 2) / rl,\n            0,\n            0,\n            0,\n            0,\n            (near * 2) / tb,\n            0,\n            0,\n            (right + left) / rl,\n            (top + bottom) / tb,\n            -(far + near) / fn,\n            -1,\n            0,\n            0,\n            -(far * near * 2) / fn,\n            0,\n        ]);\n    }\n    static perspective(fov, aspect, near, far) {\n        const top = near * Math.tan(fov * Math.PI / 360.0);\n        const right = top * aspect;\n        return mat4.frustum(-right, right, -top, top, near, far);\n    }\n    static orthographic(left, right, bottom, top, near, far) {\n        const rl = (right - left);\n        const tb = (top - bottom);\n        const fn = (far - near);\n        return new mat4([\n            2 / rl,\n            0,\n            0,\n            0,\n            0,\n            2 / tb,\n            0,\n            0,\n            0,\n            0,\n            -2 / fn,\n            0,\n            -(left + right) / rl,\n            -(top + bottom) / tb,\n            -(far + near) / fn,\n            1,\n        ]);\n    }\n    static lookAt(position, target, up = vec3_1.default.up) {\n        if (position.equals(target)) {\n            return this.identity;\n        }\n        const z = vec3_1.default.difference(position, target).normalize();\n        const x = vec3_1.default.cross(up, z).normalize();\n        const y = vec3_1.default.cross(z, x).normalize();\n        return new mat4([\n            x.x,\n            y.x,\n            z.x,\n            0,\n            x.y,\n            y.y,\n            z.y,\n            0,\n            x.z,\n            y.z,\n            z.z,\n            0,\n            -vec3_1.default.dot(x, position),\n            -vec3_1.default.dot(y, position),\n            -vec3_1.default.dot(z, position),\n            1,\n        ]);\n    }\n    static product(m1, m2, result) {\n        const a00 = m1.at(0);\n        const a01 = m1.at(1);\n        const a02 = m1.at(2);\n        const a03 = m1.at(3);\n        const a10 = m1.at(4);\n        const a11 = m1.at(5);\n        const a12 = m1.at(6);\n        const a13 = m1.at(7);\n        const a20 = m1.at(8);\n        const a21 = m1.at(9);\n        const a22 = m1.at(10);\n        const a23 = m1.at(11);\n        const a30 = m1.at(12);\n        const a31 = m1.at(13);\n        const a32 = m1.at(14);\n        const a33 = m1.at(15);\n        const b00 = m2.at(0);\n        const b01 = m2.at(1);\n        const b02 = m2.at(2);\n        const b03 = m2.at(3);\n        const b10 = m2.at(4);\n        const b11 = m2.at(5);\n        const b12 = m2.at(6);\n        const b13 = m2.at(7);\n        const b20 = m2.at(8);\n        const b21 = m2.at(9);\n        const b22 = m2.at(10);\n        const b23 = m2.at(11);\n        const b30 = m2.at(12);\n        const b31 = m2.at(13);\n        const b32 = m2.at(14);\n        const b33 = m2.at(15);\n        if (result) {\n            result.init([\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\n            ]);\n            return result;\n        }\n        else {\n            return new mat4([\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\n            ]);\n        }\n    }\n}\nexports[\"default\"] = mat4;\nmat4.identity = new mat4().setIdentity();\n\n\n//# sourceURL=webpack://earthquest/./src/math/mat4.ts?");

/***/ }),

/***/ "./src/math/quat.ts":
/*!**************************!*\
  !*** ./src/math/quat.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst mat3_1 = __importDefault(__webpack_require__(/*! ./mat3 */ \"./src/math/mat3.ts\"));\nconst mat4_1 = __importDefault(__webpack_require__(/*! ./mat4 */ \"./src/math/mat4.ts\"));\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\nclass quat {\n    get x() {\n        return this.values[0];\n    }\n    get y() {\n        return this.values[1];\n    }\n    get z() {\n        return this.values[2];\n    }\n    get w() {\n        return this.values[3];\n    }\n    get xy() {\n        return [\n            this.values[0],\n            this.values[1],\n        ];\n    }\n    get xyz() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ];\n    }\n    get xyzw() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[3],\n        ];\n    }\n    set x(value) {\n        this.values[0] = value;\n    }\n    set y(value) {\n        this.values[1] = value;\n    }\n    set z(value) {\n        this.values[2] = value;\n    }\n    set w(value) {\n        this.values[3] = value;\n    }\n    set xy(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n    }\n    set xyz(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n    }\n    set xyzw(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n        this.values[3] = values[3];\n    }\n    constructor(values) {\n        this.values = new Float32Array(4);\n        if (values !== undefined) {\n            this.xyzw = values;\n        }\n    }\n    at(index) {\n        return this.values[index];\n    }\n    reset() {\n        for (let i = 0; i < 4; i++) {\n            this.values[i] = 0;\n        }\n    }\n    copy(dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        for (let i = 0; i < 4; i++) {\n            dest.values[i] = this.values[i];\n        }\n        return dest;\n    }\n    roll() {\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        return Math.atan2(2.0 * (x * y + w * z), w * w + x * x - y * y - z * z);\n    }\n    pitch() {\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        return Math.atan2(2.0 * (y * z + w * x), w * w - x * x - y * y + z * z);\n    }\n    yaw() {\n        return Math.asin(2.0 * (this.x * this.z - this.w * this.y));\n    }\n    equals(vector, threshold = constants_1.epsilon) {\n        for (let i = 0; i < 4; i++) {\n            if (Math.abs(this.values[i] - vector.at(i)) > threshold) {\n                return false;\n            }\n        }\n        return true;\n    }\n    setIdentity() {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 1;\n        return this;\n    }\n    calculateW() {\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        this.w = -(Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z)));\n        return this;\n    }\n    inverse() {\n        const dot = quat.dot(this, this);\n        if (!dot) {\n            this.xyzw = [0, 0, 0, 0];\n            return this;\n        }\n        const invDot = dot ? 1.0 / dot : 0;\n        this.x *= -invDot;\n        this.y *= -invDot;\n        this.z *= -invDot;\n        this.w *= invDot;\n        return this;\n    }\n    conjugate() {\n        this.values[0] *= -1;\n        this.values[1] *= -1;\n        this.values[2] *= -1;\n        return this;\n    }\n    length() {\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    normalize(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        let length = Math.sqrt(x * x + y * y + z * z + w * w);\n        if (!length) {\n            dest.x = 0;\n            dest.y = 0;\n            dest.z = 0;\n            dest.w = 0;\n            return dest;\n        }\n        length = 1 / length;\n        dest.x = x * length;\n        dest.y = y * length;\n        dest.z = z * length;\n        dest.w = w * length;\n        return dest;\n    }\n    add(other) {\n        for (let i = 0; i < 4; i++) {\n            this.values[i] += other.at(i);\n        }\n        return this;\n    }\n    multiply(other) {\n        const q1x = this.values[0];\n        const q1y = this.values[1];\n        const q1z = this.values[2];\n        const q1w = this.values[3];\n        const q2x = other.x;\n        const q2y = other.y;\n        const q2z = other.z;\n        const q2w = other.w;\n        this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\n        this.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\n        this.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\n        this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n        return this;\n    }\n    multiplyVec3(vector, dest) {\n        if (!dest) {\n            dest = new vec3_1.default();\n        }\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        const qx = this.x;\n        const qy = this.y;\n        const qz = this.z;\n        const qw = this.w;\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n        dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n        return dest;\n    }\n    toMat3(dest) {\n        if (!dest) {\n            dest = new mat3_1.default();\n        }\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        dest.init([\n            1 - (yy + zz),\n            xy + wz,\n            xz - wy,\n            xy - wz,\n            1 - (xx + zz),\n            yz + wx,\n            xz + wy,\n            yz - wx,\n            1 - (xx + yy),\n        ]);\n        return dest;\n    }\n    toMat4(dest) {\n        if (!dest) {\n            dest = new mat4_1.default();\n        }\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        dest.init([\n            1 - (yy + zz),\n            xy + wz,\n            xz - wy,\n            0,\n            xy - wz,\n            1 - (xx + zz),\n            yz + wx,\n            0,\n            xz + wy,\n            yz - wx,\n            1 - (xx + yy),\n            0,\n            0,\n            0,\n            0,\n            1,\n        ]);\n        return dest;\n    }\n    static dot(q1, q2) {\n        return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\n    }\n    static sum(q1, q2, dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        dest.x = q1.x + q2.x;\n        dest.y = q1.y + q2.y;\n        dest.z = q1.z + q2.z;\n        dest.w = q1.w + q2.w;\n        return dest;\n    }\n    static product(q1, q2, dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        const q1x = q1.x;\n        const q1y = q1.y;\n        const q1z = q1.z;\n        const q1w = q1.w;\n        const q2x = q2.x;\n        const q2y = q2.y;\n        const q2z = q2.z;\n        const q2w = q2.w;\n        dest.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\n        dest.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\n        dest.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\n        dest.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n        return dest;\n    }\n    static cross(q1, q2, dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        const q1x = q1.x;\n        const q1y = q1.y;\n        const q1z = q1.z;\n        const q1w = q1.w;\n        const q2x = q2.x;\n        const q2y = q2.y;\n        const q2z = q2.z;\n        const q2w = q2.w;\n        dest.x = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\n        dest.y = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n        dest.z = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\n        dest.w = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\n        return dest;\n    }\n    static shortMix(q1, q2, time, dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        if (time <= 0.0) {\n            dest.xyzw = q1.xyzw;\n            return dest;\n        }\n        else if (time >= 1.0) {\n            dest.xyzw = q2.xyzw;\n            return dest;\n        }\n        let cos = quat.dot(q1, q2);\n        const q2a = q2.copy();\n        if (cos < 0.0) {\n            q2a.inverse();\n            cos = -cos;\n        }\n        let k0;\n        let k1;\n        if (cos > 0.9999) {\n            k0 = 1 - time;\n            k1 = 0 + time;\n        }\n        else {\n            const sin = Math.sqrt(1 - cos * cos);\n            const angle = Math.atan2(sin, cos);\n            const oneOverSin = 1 / sin;\n            k0 = Math.sin((1 - time) * angle) * oneOverSin;\n            k1 = Math.sin((0 + time) * angle) * oneOverSin;\n        }\n        dest.x = k0 * q1.x + k1 * q2a.x;\n        dest.y = k0 * q1.y + k1 * q2a.y;\n        dest.z = k0 * q1.z + k1 * q2a.z;\n        dest.w = k0 * q1.w + k1 * q2a.w;\n        return dest;\n    }\n    static mix(q1, q2, time, dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        const cosHalfTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\n        if (Math.abs(cosHalfTheta) >= 1.0) {\n            dest.xyzw = q1.xyzw;\n            return dest;\n        }\n        const halfTheta = Math.acos(cosHalfTheta);\n        const sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n        if (Math.abs(sinHalfTheta) < 0.001) {\n            dest.x = q1.x * 0.5 + q2.x * 0.5;\n            dest.y = q1.y * 0.5 + q2.y * 0.5;\n            dest.z = q1.z * 0.5 + q2.z * 0.5;\n            dest.w = q1.w * 0.5 + q2.w * 0.5;\n            return dest;\n        }\n        const ratioA = Math.sin((1 - time) * halfTheta) / sinHalfTheta;\n        const ratioB = Math.sin(time * halfTheta) / sinHalfTheta;\n        dest.x = q1.x * ratioA + q2.x * ratioB;\n        dest.y = q1.y * ratioA + q2.y * ratioB;\n        dest.z = q1.z * ratioA + q2.z * ratioB;\n        dest.w = q1.w * ratioA + q2.w * ratioB;\n        return dest;\n    }\n    static fromAxisAngle(axis, angle, dest) {\n        if (!dest) {\n            dest = new quat();\n        }\n        angle *= 0.5;\n        const sin = Math.sin(angle);\n        dest.x = axis.x * sin;\n        dest.y = axis.y * sin;\n        dest.z = axis.z * sin;\n        dest.w = Math.cos(angle);\n        return dest;\n    }\n}\nexports[\"default\"] = quat;\nquat.identity = new quat().setIdentity();\n\n\n//# sourceURL=webpack://earthquest/./src/math/quat.ts?");

/***/ }),

/***/ "./src/math/vec2.ts":
/*!**************************!*\
  !*** ./src/math/vec2.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\nclass vec2 {\n    get x() {\n        return this.values[0];\n    }\n    get y() {\n        return this.values[1];\n    }\n    get xy() {\n        return [\n            this.values[0],\n            this.values[1],\n        ];\n    }\n    set x(value) {\n        this.values[0] = value;\n    }\n    set y(value) {\n        this.values[1] = value;\n    }\n    set xy(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n    }\n    constructor(values) {\n        this.values = new Float32Array(2);\n        if (values !== undefined) {\n            this.xy = values;\n        }\n    }\n    at(index) {\n        return this.values[index];\n    }\n    reset() {\n        this.x = 0;\n        this.y = 0;\n    }\n    copy(dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        dest.x = this.x;\n        dest.y = this.y;\n        return dest;\n    }\n    negate(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        dest.x = -this.x;\n        dest.y = -this.y;\n        return dest;\n    }\n    equals(vector, threshold = constants_1.epsilon) {\n        if (Math.abs(this.x - vector.x) > threshold) {\n            return false;\n        }\n        if (Math.abs(this.y - vector.y) > threshold) {\n            return false;\n        }\n        return true;\n    }\n    length() {\n        return Math.sqrt(this.squaredLength());\n    }\n    squaredLength() {\n        const x = this.x;\n        const y = this.y;\n        return (x * x + y * y);\n    }\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y;\n        return this;\n    }\n    subtract(vector) {\n        this.x -= vector.x;\n        this.y -= vector.y;\n        return this;\n    }\n    multiply(vector) {\n        this.x *= vector.x;\n        this.y *= vector.y;\n        return this;\n    }\n    divide(vector) {\n        this.x /= vector.x;\n        this.y /= vector.y;\n        return this;\n    }\n    scale(value, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        dest.x *= value;\n        dest.y *= value;\n        return dest;\n    }\n    normalize(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        let length = this.length();\n        if (length === 1) {\n            return this;\n        }\n        if (length === 0) {\n            dest.x = 0;\n            dest.y = 0;\n            return dest;\n        }\n        length = 1.0 / length;\n        dest.x *= length;\n        dest.y *= length;\n        return dest;\n    }\n    multiplyMat2(matrix, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        return matrix.multiplyVec2(this, dest);\n    }\n    multiplyMat3(matrix, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        return matrix.multiplyVec2(this, dest);\n    }\n    static cross(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3_1.default();\n        }\n        const x = vector.x;\n        const y = vector.y;\n        const x2 = vector2.x;\n        const y2 = vector2.y;\n        const z = x * y2 - y * x2;\n        dest.x = 0;\n        dest.y = 0;\n        dest.z = z;\n        return dest;\n    }\n    static dot(vector, vector2) {\n        return (vector.x * vector2.x + vector.y * vector2.y);\n    }\n    static distance(vector, vector2) {\n        return Math.sqrt(this.squaredDistance(vector, vector2));\n    }\n    static squaredDistance(vector, vector2) {\n        const x = vector2.x - vector.x;\n        const y = vector2.y - vector.y;\n        return (x * x + y * y);\n    }\n    static direction(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        const x = vector.x - vector2.x;\n        const y = vector.y - vector2.y;\n        let length = Math.sqrt(x * x + y * y);\n        if (length === 0) {\n            dest.x = 0;\n            dest.y = 0;\n            return dest;\n        }\n        length = 1 / length;\n        dest.x = x * length;\n        dest.y = y * length;\n        return dest;\n    }\n    static mix(vector, vector2, time, dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        const x = vector.x;\n        const y = vector.y;\n        const x2 = vector2.x;\n        const y2 = vector2.y;\n        dest.x = x + time * (x2 - x);\n        dest.y = y + time * (y2 - y);\n        return dest;\n    }\n    static sum(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        dest.x = vector.x + vector2.x;\n        dest.y = vector.y + vector2.y;\n        return dest;\n    }\n    static difference(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        dest.x = vector.x - vector2.x;\n        dest.y = vector.y - vector2.y;\n        return dest;\n    }\n    static product(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        dest.x = vector.x * vector2.x;\n        dest.y = vector.y * vector2.y;\n        return dest;\n    }\n    static quotient(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec2();\n        }\n        dest.x = vector.x / vector2.x;\n        dest.y = vector.y / vector2.y;\n        return dest;\n    }\n}\nexports[\"default\"] = vec2;\nvec2.zero = new vec2([0, 0]);\nvec2.one = new vec2([1, 1]);\n\n\n//# sourceURL=webpack://earthquest/./src/math/vec2.ts?");

/***/ }),

/***/ "./src/math/vec3.ts":
/*!**************************!*\
  !*** ./src/math/vec3.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst quat_1 = __importDefault(__webpack_require__(/*! ./quat */ \"./src/math/quat.ts\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\nclass vec3 {\n    get x() {\n        return this.values[0];\n    }\n    get y() {\n        return this.values[1];\n    }\n    get z() {\n        return this.values[2];\n    }\n    get xy() {\n        return [\n            this.values[0],\n            this.values[1],\n        ];\n    }\n    get xyz() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ];\n    }\n    set x(value) {\n        this.values[0] = value;\n    }\n    set y(value) {\n        this.values[1] = value;\n    }\n    set z(value) {\n        this.values[2] = value;\n    }\n    set xy(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n    }\n    set xyz(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n    }\n    constructor(values) {\n        this.values = new Float32Array(3);\n        if (values !== undefined) {\n            this.xyz = values;\n        }\n    }\n    at(index) {\n        return this.values[index];\n    }\n    reset() {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n    copy(dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        dest.x = this.x;\n        dest.y = this.y;\n        dest.z = this.z;\n        return dest;\n    }\n    negate(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        dest.x = -this.x;\n        dest.y = -this.y;\n        dest.z = -this.z;\n        return dest;\n    }\n    equals(vector, threshold = constants_1.epsilon) {\n        if (Math.abs(this.x - vector.x) > threshold) {\n            return false;\n        }\n        if (Math.abs(this.y - vector.y) > threshold) {\n            return false;\n        }\n        if (Math.abs(this.z - vector.z) > threshold) {\n            return false;\n        }\n        return true;\n    }\n    length() {\n        return Math.sqrt(this.squaredLength());\n    }\n    squaredLength() {\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        return (x * x + y * y + z * z);\n    }\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y;\n        this.z += vector.z;\n        return this;\n    }\n    subtract(vector) {\n        this.x -= vector.x;\n        this.y -= vector.y;\n        this.z -= vector.z;\n        return this;\n    }\n    multiply(vector) {\n        this.x *= vector.x;\n        this.y *= vector.y;\n        this.z *= vector.z;\n        return this;\n    }\n    divide(vector) {\n        this.x /= vector.x;\n        this.y /= vector.y;\n        this.z /= vector.z;\n        return this;\n    }\n    scale(value, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        dest.x *= value;\n        dest.y *= value;\n        dest.z *= value;\n        return dest;\n    }\n    normalize(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        let length = this.length();\n        if (length === 1) {\n            return this;\n        }\n        if (length === 0) {\n            dest.x = 0;\n            dest.y = 0;\n            dest.z = 0;\n            return dest;\n        }\n        length = 1.0 / length;\n        dest.x *= length;\n        dest.y *= length;\n        dest.z *= length;\n        return dest;\n    }\n    multiplyByMat3(matrix, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        return matrix.multiplyVec3(this, dest);\n    }\n    multiplyByQuat(quaternion, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        return quaternion.multiplyVec3(this, dest);\n    }\n    toQuat(dest) {\n        if (!dest) {\n            dest = new quat_1.default();\n        }\n        const c = new vec3();\n        const s = new vec3();\n        c.x = Math.cos(this.x * 0.5);\n        s.x = Math.sin(this.x * 0.5);\n        c.y = Math.cos(this.y * 0.5);\n        s.y = Math.sin(this.y * 0.5);\n        c.z = Math.cos(this.z * 0.5);\n        s.z = Math.sin(this.z * 0.5);\n        dest.x = s.x * c.y * c.z - c.x * s.y * s.z;\n        dest.y = c.x * s.y * c.z + s.x * c.y * s.z;\n        dest.z = c.x * c.y * s.z - s.x * s.y * c.z;\n        dest.w = c.x * c.y * c.z + s.x * s.y * s.z;\n        return dest;\n    }\n    static cross(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        const x2 = vector2.x;\n        const y2 = vector2.y;\n        const z2 = vector2.z;\n        dest.x = y * z2 - z * y2;\n        dest.y = z * x2 - x * z2;\n        dest.z = x * y2 - y * x2;\n        return dest;\n    }\n    static dot(vector, vector2) {\n        const x = vector.x;\n        const y = vector.y;\n        const z = vector.z;\n        const x2 = vector2.x;\n        const y2 = vector2.y;\n        const z2 = vector2.z;\n        return (x * x2 + y * y2 + z * z2);\n    }\n    static distance(vector, vector2) {\n        const x = vector2.x - vector.x;\n        const y = vector2.y - vector.y;\n        const z = vector2.z - vector.z;\n        return Math.sqrt(this.squaredDistance(vector, vector2));\n    }\n    static squaredDistance(vector, vector2) {\n        const x = vector2.x - vector.x;\n        const y = vector2.y - vector.y;\n        const z = vector2.z - vector.z;\n        return (x * x + y * y + z * z);\n    }\n    static direction(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        const x = vector.x - vector2.x;\n        const y = vector.y - vector2.y;\n        const z = vector.z - vector2.z;\n        let length = Math.sqrt(x * x + y * y + z * z);\n        if (length === 0) {\n            dest.x = 0;\n            dest.y = 0;\n            dest.z = 0;\n            return dest;\n        }\n        length = 1 / length;\n        dest.x = x * length;\n        dest.y = y * length;\n        dest.z = z * length;\n        return dest;\n    }\n    static mix(vector, vector2, time, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        dest.x = vector.x + time * (vector2.x - vector.x);\n        dest.y = vector.y + time * (vector2.y - vector.y);\n        dest.z = vector.z + time * (vector2.z - vector.z);\n        return dest;\n    }\n    static sum(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        dest.x = vector.x + vector2.x;\n        dest.y = vector.y + vector2.y;\n        dest.z = vector.z + vector2.z;\n        return dest;\n    }\n    static difference(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        dest.x = vector.x - vector2.x;\n        dest.y = vector.y - vector2.y;\n        dest.z = vector.z - vector2.z;\n        return dest;\n    }\n    static product(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        dest.x = vector.x * vector2.x;\n        dest.y = vector.y * vector2.y;\n        dest.z = vector.z * vector2.z;\n        return dest;\n    }\n    static quotient(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec3();\n        }\n        dest.x = vector.x / vector2.x;\n        dest.y = vector.y / vector2.y;\n        dest.z = vector.z / vector2.z;\n        return dest;\n    }\n}\nexports[\"default\"] = vec3;\nvec3.zero = new vec3([0, 0, 0]);\nvec3.one = new vec3([1, 1, 1]);\nvec3.up = new vec3([0, 1, 0]);\nvec3.right = new vec3([1, 0, 0]);\nvec3.forward = new vec3([0, 0, 1]);\n\n\n//# sourceURL=webpack://earthquest/./src/math/vec3.ts?");

/***/ }),

/***/ "./src/math/vec4.ts":
/*!**************************!*\
  !*** ./src/math/vec4.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\nclass vec4 {\n    get x() {\n        return this.values[0];\n    }\n    get y() {\n        return this.values[1];\n    }\n    get z() {\n        return this.values[2];\n    }\n    get w() {\n        return this.values[3];\n    }\n    get xy() {\n        return [\n            this.values[0],\n            this.values[1],\n        ];\n    }\n    get xyz() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ];\n    }\n    get xyzw() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[3],\n        ];\n    }\n    set x(value) {\n        this.values[0] = value;\n    }\n    set y(value) {\n        this.values[1] = value;\n    }\n    set z(value) {\n        this.values[2] = value;\n    }\n    set w(value) {\n        this.values[3] = value;\n    }\n    set xy(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n    }\n    set xyz(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n    }\n    set xyzw(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n        this.values[3] = values[3];\n    }\n    get r() {\n        return this.values[0];\n    }\n    get g() {\n        return this.values[1];\n    }\n    get b() {\n        return this.values[2];\n    }\n    get a() {\n        return this.values[3];\n    }\n    get rg() {\n        return [\n            this.values[0],\n            this.values[1],\n        ];\n    }\n    get rgb() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n        ];\n    }\n    get rgba() {\n        return [\n            this.values[0],\n            this.values[1],\n            this.values[2],\n            this.values[3],\n        ];\n    }\n    set r(value) {\n        this.values[0] = value;\n    }\n    set g(value) {\n        this.values[1] = value;\n    }\n    set b(value) {\n        this.values[2] = value;\n    }\n    set a(value) {\n        this.values[3] = value;\n    }\n    set rg(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n    }\n    set rgb(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n    }\n    set rgba(values) {\n        this.values[0] = values[0];\n        this.values[1] = values[1];\n        this.values[2] = values[2];\n        this.values[3] = values[3];\n    }\n    constructor(values) {\n        this.values = new Float32Array(4);\n        if (values !== undefined) {\n            this.xyzw = values;\n        }\n    }\n    at(index) {\n        return this.values[index];\n    }\n    reset() {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    }\n    copy(dest) {\n        if (!dest) {\n            dest = new vec4();\n        }\n        dest.x = this.x;\n        dest.y = this.y;\n        dest.z = this.z;\n        dest.w = this.w;\n        return dest;\n    }\n    negate(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        dest.x = -this.x;\n        dest.y = -this.y;\n        dest.z = -this.z;\n        dest.w = -this.w;\n        return dest;\n    }\n    equals(vector, threshold = constants_1.epsilon) {\n        if (Math.abs(this.x - vector.x) > threshold) {\n            return false;\n        }\n        if (Math.abs(this.y - vector.y) > threshold) {\n            return false;\n        }\n        if (Math.abs(this.z - vector.z) > threshold) {\n            return false;\n        }\n        if (Math.abs(this.w - vector.w) > threshold) {\n            return false;\n        }\n        return true;\n    }\n    length() {\n        return Math.sqrt(this.squaredLength());\n    }\n    squaredLength() {\n        const x = this.x;\n        const y = this.y;\n        const z = this.z;\n        const w = this.w;\n        return (x * x + y * y + z * z + w * w);\n    }\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y;\n        this.z += vector.z;\n        this.w += vector.w;\n        return this;\n    }\n    subtract(vector) {\n        this.x -= vector.x;\n        this.y -= vector.y;\n        this.z -= vector.z;\n        this.w -= vector.w;\n        return this;\n    }\n    multiply(vector) {\n        this.x *= vector.x;\n        this.y *= vector.y;\n        this.z *= vector.z;\n        this.w *= vector.w;\n        return this;\n    }\n    divide(vector) {\n        this.x /= vector.x;\n        this.y /= vector.y;\n        this.z /= vector.z;\n        this.w /= vector.w;\n        return this;\n    }\n    scale(value, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        dest.x *= value;\n        dest.y *= value;\n        dest.z *= value;\n        dest.w *= value;\n        return dest;\n    }\n    normalize(dest) {\n        if (!dest) {\n            dest = this;\n        }\n        let length = this.length();\n        if (length === 1) {\n            return this;\n        }\n        if (length === 0) {\n            dest.x *= 0;\n            dest.y *= 0;\n            dest.z *= 0;\n            dest.w *= 0;\n            return dest;\n        }\n        length = 1.0 / length;\n        dest.x *= length;\n        dest.y *= length;\n        dest.z *= length;\n        dest.w *= length;\n        return dest;\n    }\n    multiplyMat4(matrix, dest) {\n        if (!dest) {\n            dest = this;\n        }\n        return matrix.multiplyVec4(this, dest);\n    }\n    static mix(vector, vector2, time, dest) {\n        if (!dest) {\n            dest = new vec4();\n        }\n        dest.x = vector.x + time * (vector2.x - vector.x);\n        dest.y = vector.y + time * (vector2.y - vector.y);\n        dest.z = vector.z + time * (vector2.z - vector.z);\n        dest.w = vector.w + time * (vector2.w - vector.w);\n        return dest;\n    }\n    static sum(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec4();\n        }\n        dest.x = vector.x + vector2.x;\n        dest.y = vector.y + vector2.y;\n        dest.z = vector.z + vector2.z;\n        dest.w = vector.w + vector2.w;\n        return dest;\n    }\n    static difference(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec4();\n        }\n        dest.x = vector.x - vector2.x;\n        dest.y = vector.y - vector2.y;\n        dest.z = vector.z - vector2.z;\n        dest.w = vector.w - vector2.w;\n        return dest;\n    }\n    static product(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec4();\n        }\n        dest.x = vector.x * vector2.x;\n        dest.y = vector.y * vector2.y;\n        dest.z = vector.z * vector2.z;\n        dest.w = vector.w * vector2.w;\n        return dest;\n    }\n    static quotient(vector, vector2, dest) {\n        if (!dest) {\n            dest = new vec4();\n        }\n        dest.x = vector.x / vector2.x;\n        dest.y = vector.y / vector2.y;\n        dest.z = vector.z / vector2.z;\n        dest.w = vector.w / vector2.w;\n        return dest;\n    }\n}\nexports[\"default\"] = vec4;\nvec4.zero = new vec4([0, 0, 0, 1]);\nvec4.one = new vec4([1, 1, 1, 1]);\n\n\n//# sourceURL=webpack://earthquest/./src/math/vec4.ts?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/index.ts"));
/******/ }
]);